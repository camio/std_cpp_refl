digraph metaobjects {
	overlap=false
	rankdir=BT
	ranksep=0.5
	maxiter=1000000

	subgraph {
		node [penwidth=1.8,style="filled",shape="box",fillcolor="#ffffa0"]
		StringConstant
		IntegralConstant
		BooleanConstant
	}

	node [penwidth=1.8,style="filled",shape="box",fillcolor="#a0a0a0"]
	Type
	MetaobjectCategory

	node [penwidth=2,style="rounded,filled",shape="box",fillcolor="#a0ffa0"]
	Metaobject 
	MetaSpecifier
	MetaNamed
	MetaScoped
	MetaScope
	MetaAlias
	MetaNamespace
	MetaNamespaceAlias [label="MetaNamespace\nAlias"]
	MetaGlobalScope
	MetaType
	MetaTypeAlias [label="MetaType\nAlias"]
	MetaTyped
	MetaVariable
	MetaClass
	MetaEnum
	MetaEnumClass

	MetaobjectSequence [label="Metaobject\nSequence"]

	node [penwidth=1,style="filled",shape="egg",fillcolor="#c0c0c0"]

	get_category
	is_sequence
	is_specifier

	subgraph {
		is_namespace
		is_global_scope
		is_type
		is_class
	}
	subgraph {
		has_name
		has_scope
		is_scope
		is_alias
	}
	subgraph {
		source_file
		source_line
		source_column
		source_file -> source_line [style="invisible",dir="none"]
	}

	get_name
	get_keyword
	get_scope
	get_aliased
	get_data_members
	get_all_data_members
	get_enum_members
	get_reflected_type
	get_type
	get_typedef_type
	get_size
	get_element

	is_namespace -> has_name [style="invisible",dir="none"]
	has_name -> source_file [style="invisible",dir="none"]

	edge [penwidth=2,dir="both",arrowsize=1.5,arrowtail="onormal",arrowhead="none"]

	Type -> MetaobjectCategory

	Metaobject -> MetaobjectSequence

	Metaobject -> MetaSpecifier
	Metaobject -> MetaNamed
	Metaobject -> MetaScoped
	Metaobject -> MetaTyped
	Metaobject -> MetaAlias

	MetaNamed -> MetaScope
	MetaScoped -> MetaScope

	MetaNamed -> MetaVariable
	MetaTyped -> MetaVariable

	MetaScope -> MetaNamespace
	MetaNamespace -> MetaNamespaceAlias
	MetaAlias -> MetaNamespaceAlias
	MetaNamespace -> MetaGlobalScope

	MetaNamed -> MetaType
	MetaScoped -> MetaType
	MetaType -> MetaTypeAlias
	MetaAlias -> MetaTypeAlias

	MetaType -> MetaScope [style="invisible",dir="none"]
	MetaNamed -> MetaScoped [style="invisible",dir="none"]

	MetaType -> MetaClass
	MetaScope -> MetaClass

	MetaType -> MetaEnum

	MetaType -> MetaEnumClass
	MetaScope -> MetaEnumClass

	edge [penwidth=1,arrowhead="none",arrowtail="none",style="solid"]
	Metaobject -> get_category
	Metaobject -> is_sequence
	Metaobject -> is_specifier
	Metaobject -> is_namespace
	Metaobject -> is_global_scope
	Metaobject -> is_type
	Metaobject -> is_class
	Metaobject -> has_name
	Metaobject -> has_scope
	Metaobject -> has_type
	Metaobject -> is_scope
	Metaobject -> is_alias

	Metaobject -> source_file
	Metaobject -> source_line
	Metaobject -> source_column

	MetaobjectSequence -> get_element [constraint=false]
	MetaobjectSequence -> get_size
	MetaSpecifier -> get_keyword
	MetaNamed -> get_name
	MetaScoped -> get_scope
	MetaTyped -> get_type
	MetaType -> get_reflected_type
	MetaAlias -> get_aliased
	MetaTypeAlias -> get_typedef_type

	MetaClass -> get_data_members
	MetaClass -> get_all_data_members
	get_data_members -> get_all_data_members [style="invisible",dir="none"]

	MetaEnum -> get_enum_members
	MetaEnumClass -> get_enum_members

	get_name -> get_scope [style="invisible",dir="none"]

	edge [penwidth=1,arrowhead="vee",style="dashed"]

	get_category -> MetaobjectCategory
	is_sequence -> BooleanConstant
	is_specifier -> BooleanConstant
	is_namespace -> BooleanConstant
	is_global_scope -> BooleanConstant
	is_type -> BooleanConstant
	is_class -> BooleanConstant
	has_name -> BooleanConstant
	has_scope -> BooleanConstant
	has_type -> BooleanConstant
	is_scope -> BooleanConstant
	is_alias -> BooleanConstant

	source_file -> StringConstant
	source_line -> IntegralConstant
	source_column -> IntegralConstant

	get_element -> Metaobject
	get_size -> IntegralConstant [constraint=false]
	get_keyword -> StringConstant
	get_name -> StringConstant
	get_scope -> MetaScope
	get_reflected_type -> Type
	get_type -> MetaType
	get_typedef_type -> MetaType
	get_data_members -> MetaobjectSequence
	get_all_data_members -> MetaobjectSequence
	get_enum_members -> MetaobjectSequence
	get_aliased -> MetaNamed

	edge [penwidth=1,arrowhead="none",style="dotted"]
	is_sequence -> MetaobjectSequence
	is_specifier -> MetaSpecifier
	is_namespace -> MetaNamespace
	is_global_scope -> MetaGlobalScope
	is_type -> MetaType
	is_class -> MetaClass
	has_name -> MetaNamed
	has_scope -> MetaScoped
	has_type -> MetaTyped
	is_scope -> MetaScope
	is_alias -> MetaAlias

}
