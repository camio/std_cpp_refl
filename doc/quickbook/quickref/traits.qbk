[/ Copyright 2015 Matus Chochlik.                             ]

[section:traits Traits and categorization]

[section:is_metaobject [^is_metaobject]]

In order to distinguish between regular types and metaobjects generated
by the compiler, the [^__is_metaobject] trait should
be added to the [^std] namespace as one of the type traits.

[import traits.hpp]

[reflexpr_is_metaobject]
[endsect]

The rest of the trait templates should be nested inside of the __meta namespace.

[section:get_category [^get_category]]

The [^get_category] template returns one of the __MetaobjectCategory tags
indicating the category of the metaobject.

[reflexpr_get_category]

Furthermore the following helper templates should be defined for a more
convenient use.

[heading:has_category [^has_category]]

[reflexpr_has_category_1]
[reflexpr_has_category_2]
[reflexpr_has_category_3]
[reflexpr_has_category_4]

[heading:is_namespace [^is_namespace]]
[reflexpr_is_namespace]

[heading:is_global_scope [^is_global_scope]]
[reflexpr_is_global_scope]

[heading:is_type [^is_type]]
[reflexpr_is_type]

[heading:is_class [^is_class]]
[reflexpr_is_class]

[heading:is_enum [^is_enum]]
[reflexpr_is_enum]

[endsect]

[section:is_sequence [^is_sequence]]

Indicates if __Metaobject is a __MetaobjectSequence.

[reflexpr_is_sequence]
[endsect]

[section:has_name [^has_name]]

Indicates if __Metaobject is a __MetaNamed.

[reflexpr_has_name]
[endsect]

[section:has_scope [^has_scope]]

Indicates if __Metaobject is a __MetaScoped.

[reflexpr_has_scope]
[endsect]

[section:is_scope [^is_scope]]

Indicates if __Metaobject is a __MetaScope.

[reflexpr_is_scope]
[endsect]

[section:is_alias [^is_alias]]

Indicates if __Metaobject is a __MetaAlias.

[reflexpr_is_alias]
[endsect]


[endsect]

